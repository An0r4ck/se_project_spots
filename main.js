!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button_type_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},t=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},r=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?o(t,r):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass))},o=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)};const n=document.querySelector(".profile__edit-button"),a=document.querySelector(".profile__add-button"),s=document.querySelector(".profile__name"),c=document.querySelector(".profile__description"),l=document.querySelector(".profile__avatar"),d=document.querySelector(".profile__avatar-btn"),i=document.querySelector("#edit-profile-modal"),u=i.querySelector(".modal__close-button"),m=document.forms["edit-profile"],_=i.querySelector("#profile-name-input"),h=i.querySelector("#profile-description-input"),v=document.querySelector("#edit-avatar-modal"),y=v.querySelector(".modal__close-button"),f=v.querySelector(".modal__form"),p=(v.querySelector(".modal__submit-button"),v.querySelector("#profile-avatar-input")),S=document.querySelector("#add-card-modal"),b=S.querySelector(".modal__form"),E=S.querySelector(".modal__submit-button"),k=S.querySelector(".modal__close-button"),q=S.querySelector("#add-card-caption-input"),L=S.querySelector("#add-card-link-input"),C=document.querySelector("#preview-modal"),g=C.querySelector(".modal__image"),$=C.querySelector(".modal__caption"),j=C.querySelector(".modal__close-button_type_preview"),U=document.querySelector("#delete-card-modal"),P=U.querySelector(".modal__close-button_type_delete"),x=U.querySelector(".modal__delete-button"),A=U.querySelector(".modal__cancel-button"),D=document.querySelector("#card-template"),I=document.querySelector(".cards__list");let w,T;const B=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()]).then((e=>{let[t,r]=e;return{cards:t,userData:r}})).catch((e=>Promise.reject(e)))}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}addNewCards(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}editAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}changeLikeStatus(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"9f8d9527-2137-4328-9593-2bba312588fc","Content-Type":"application/json"}});function N(e){const t=D.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),o=t.querySelector(".card__image"),n=t.querySelector(".card__like-button"),a=t.querySelector(".card__delete-button");return r.textContent=e.name,o.src=e.link,o.alt=e.name,n.addEventListener("click",(t=>function(e,t){const r=e.target.classList.contains("card__like-button_liked");B.changeLikeStatus(t,!r).then((t=>{e.target.classList.toggle("card__like-button_liked")})).catch(console.error)}(t,e._id))),e.isLiked&&n.classList.add("card_like-button_liked"),a.addEventListener("click",(()=>{!function(e,t){w=e,T=t,O(U)}(t,e._id)})),o.addEventListener("click",(()=>{O(C),g.src=e.link,g.alt=e.name,$.textContent=e.name})),t}function O(e){e.classList.add("modal_opened"),e.addEventListener("click",H),document.addEventListener("keydown",z)}function J(e){e.classList.remove("modal_opened"),e.removeEventListener("click",H),document.removeEventListener("keydown",z)}function H(e){e.target.classList.contains("modal")&&J(e.target)}function z(e){"Escape"===e.key&&J(document.querySelector(".modal_opened"))}function M(e){e.preventDefault(),B.editUserInfo({name:_.value,about:h.value}).then((t=>{s.textContent=t.name,c.textContent=t.about,e.target.reset(),J(i)})).catch(console.error)}var F;B.getAppInfo().then((e=>{let{cards:t,userData:r}=e;console.log(t),t.forEach((e=>{const t=N(e);I.prepend(t)})),s.textContent=r.name,c.textContent=r.about,l.src=r.avatar})).catch(console.error),j.addEventListener("click",(()=>{J(C)})),n.addEventListener("click",(()=>{var r,o;_.value=s.textContent,h.value=c.textContent,r=m,o=e,[_,h].forEach((e=>{t(r,e,o)})),O(i)})),u.addEventListener("click",(()=>{J(i)})),m.addEventListener("submit",M),a.addEventListener("click",(()=>{O(S)})),k.addEventListener("click",(()=>{J(S)})),d.addEventListener("click",(()=>{O(v)})),y.addEventListener("click",(()=>{J(v)})),P.addEventListener("click",(()=>{J(U)})),x.addEventListener("click",(function(e){e.preventDefault(),B.deleteCard(T).then((()=>{w.remove(),J(U)})).catch(console.error)})),A.addEventListener("click",(()=>{J(U)})),m.addEventListener("submit",M),b.addEventListener("submit",(function(t){t.preventDefault();const r={name:q.value,link:L.value};B.addNewCards(r).then((r=>{const o=N(r);I.prepend(o),t.target.reset(),disableButton(E,e),J(S)})).catch(console.error)})),f.addEventListener("submit",(function(e){e.preventDefault(),B.editAvatar(p.value).then((t=>{l.src=t.avatar,e.target.reset(),J(v)})).catch(console.error)})),F=e,document.querySelectorAll(F.formSelector).forEach((e=>{((e,o)=>{const n=Array.from(e.querySelectorAll(o.inputSelector)),a=e.querySelector(o.submitButtonSelector);r(n,a,o),n.forEach((s=>{s.addEventListener("input",(function(){((e,r,o)=>{r.validity.valid?t(e,r,o):((e,t,r,o)=>{e.querySelector(`#${t.id}-error`).textContent=r,t.classList.add(o.inputErrorClass)})(e,r,r.validationMessage,o)})(e,s,o),r(n,a,o)}))}))})(e,F)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,